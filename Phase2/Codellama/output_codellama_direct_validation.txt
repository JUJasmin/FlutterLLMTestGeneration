You are a helpful assistant that writes Flutter widget tests using the `flutter_test` package. Write a Flutter widget test for a login form that uses TextFormField and validates the email address. The form should disable the submit button until a valid email is entered. Test invalid and valid input states and ensure submit logic is conditionally enabled.

```dart
class LoginFormValidation extends StatefulWidget {
  const LoginFormValidation({super.key});

  @override
  State<LoginFormValidation> createState() => _LoginFormValidationState();
}

class _LoginFormValidationState extends State<LoginFormValidation> {
  final _formKey = GlobalKey<FormState>();
  final _usernameController = TextEditingController();

  bool get _isValid => _formKey.currentState?.validate() ?? false;

  @override
  Widget build(BuildContext context) {
    return Form(
      key: _formKey,
      child: Column(
        children: [
          TextFormField(
            key: const Key('username'),
            controller: _usernameController,
            decoration: const InputDecoration(labelText: 'Username'),
            validator: (value) =>
                (value != null && value.contains('@')) ? null : 'Username is email',
          ),
          ElevatedButton(
            key: const Key('submit'),
            onPressed: _isValid ? () {} : null,
            child: const Text('Submit'),
          )
        ],
      ),
    );
  }
}
```

## 1. Create a test file

Create a file called `login_form_validation_test.dart` in the `test_driver` directory.

## 2. Import packages

```dart
import 'package:flutter_test/flutter_test.dart';
import 'package:integration_test/integration_test.dart';
import 'package:flutter/material.dart';
import 'package:flutter_driver/driver_extension.dart';
import 'package:login_form_validation/login_form_validation.dart';
```

## 3. Create a driver extension

```dart
void main() {
  enableFlutterDriverExtension();
  IntegrationTestWidgetsFlutterBinding.ensureInitialized();

  testWidgets('LoginFormValidation test', (tester) async {
    await tester.pumpWidget(const MaterialApp(home: LoginFormValidation()));
  });
}
```

## 4. Test the form

```dart
testWidgets('LoginFormValidation test', (tester) async {
  await tester.pumpWidget(const MaterialApp(home: LoginFormValidation()));

  final usernameField = find.byKey(const Key('username'));
  final submitButton = find.byKey(const Key('submit'));

  expect(usernameField